name: Tests
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  rails-test:
    runs-on: ubuntu-latest
    env:
      CI: true
      RAILS_ENV: test
      AWS_S3_BUCKET: my-bucket
      AWS_S3_ACCESS_KEY: minioadmin
      AWS_S3_SECRET_KEY: minioadmin
      AWS_S3_ENDPOINT: http://127.0.0.1:9000/
      AWS_S3_REGION: us-east-1

    strategy:
      matrix:
        ruby: ['2.7', '3.0', '3.1']
        node-version: [16.x, 18.x]
    steps:

    # - uses: actions/checkout@v3
    # - uses: microsoft/playwright-github-action@v1
    # - name: Setup docker
    #   run: cd tests/rails && docker compose up --build -d && curl -m 10 --retry 10 -I 0.0.0.0:9000/minio/health/live
    - name: Setup minio
      run: |

        export AWS_S3_BUCKET=my-bucket
        export AWS_S3_ACCESS_KEY=minioadmin
        export AWS_S3_SECRET_KEY=minioadmin
        export AWS_S3_ENDPOINT=http://127.0.0.1:9000/
        export AWS_S3_REGION=us-east-1
        mkdir -p /tmp/data /tmp/config
        docker run -d -p 9000:9000 -p 9001:9001 --name minio \
                    -e "MINIO_ACCESS_KEY=$AWS_S3_ACCESS_KEY" \
                    -e "MINIO_SECRET_KEY=$AWS_S3_ENDPOINT" \
                    -v /tmp/data:/data \
                    -v /tmp/config:/root/.minio \
                    quay.io/minio/minio server /data --console-address ":9001"
        curl https://dl.min.io/client/mc/release/linux-amd64/mc \
          --create-dirs \
          -o $HOME/minio-binaries/mc

        chmod +x $HOME/minio-binaries/mc
        export PATH=$PATH:$HOME/minio-binaries/
        mc mb /tmp/data/my-bucket

    - name: Install libvips
      run: sudo apt -y install libvips

    - name: Set parallel workers env variable
      run: echo "PARALLEL_WORKERS=$(expr $(nproc) \* 6)" >> $GITHUB_ENV

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        rubygems: latest
        bundler-cache: true

    - uses: pnpm/action-setup@v2
      with:
        version: 7.x.x
        run_install: false

    - name: use node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: |
          pnpm-lock.yaml
          tests/rails/pnpm-lock.yaml

    - name: Install via pnpm
      run: |
        pnpm run setup
    - name: Lint
      run: |
        pnpm run lint
    - name: Tests
      run: |
        pnpm run build
        pnpm run test:ci
